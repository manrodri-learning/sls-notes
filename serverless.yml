
service: sls-notes-backend


custom:
  allowedHeaders:
    - Accept
    - Content-Type
    - Content-Length
    - Authorization
    - X-Amz-Date
    - X-Api-Key
    - X-Amz-Security-Token
    - X-Amz-User-Agent
    - app_user_id
    - app_user_name


provider:
  name: aws
  runtime: nodejs16.x
  region: eu-west-1
  stage: prod
  memorySize: 128
  timeout: 5
  endpointType: REGIONAL
  environment:
    NOTES_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    REGION: ${self:provider.region}
    COGNITO_IDENTITY_POOL_ID: eu-west-1:c20f7276-5fb5-43ed-aa69-901083689d1b
  iamManagedPolicies:
    - "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess"
    - "arn:aws:iam::aws:policy/AWSLambdaKinesisExecution"
functions:
  sls-stream-proccessor:
    handler: api/sls-stream-processor.handler
    description: Stream Processor
    events: 
      - stream:
          type: kinesis
          arn:
            Fn::GetAtt:
              - NotesTable
              - StreamArn
          batchSize: 25
          startingPosition: LATEST
          enabled: true
    
  authenticate-google:
    handler: api/authenticate-google.handler
    description: authentication GET /auth
    events:
      - http:
          path: auth
          method: get
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}
  add-note:
    handler: api/add-note.handler
    description: POST /note
    events:
      - http:
          path: note
          method: post
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}

  update-note:
    handler: api/update-note.handler
    description: PATCH /note
    events:
      - http:
          path: note
          method: patch
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}

  get-notes:
    handler: api/get-notes.handler
    description: GET /notes
    events:
      - http:
          path: notes
          method: get
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}

  get-note:
    handler: api/get-note.handler
    description: GET /note/n/{note_id}
    events:
      - http:
          path: note/n/{note_id}
          method: get
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}

  delete-note:
    handler: api/delete-note.handler
    description: DELETE /note
    events:
      - http:
          path: note/t/{timestamp}
          method: delete
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}

resources:
  Resources:
    NotesTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.NOTES_TABLE}
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: N
          - AttributeName: note_id
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
          - AttributeName: timestamp
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: note_id-index
            KeySchema:
              - AttributeName: note_id
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
    GatewayResponseDefault4XX: ## YOU CAN ADD SIMILAR SECTION FOR 5XX ERRORS IF DESIRED
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'       
